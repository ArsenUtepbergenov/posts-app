{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/projects/CreateProject.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","CreateProject","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","createProject","history","push","onSubmit","htmlFor","onChange","getFirestore","authorId","add","objectSpread","firstName","lastName","Date","catch","error","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","SignUp","signUp","newUser","_ref3","createUserWithEmailAndPassword","resp","doc","set","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cca5317e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = props => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n      <li><a onClick={ props.signOut }>Log out</a></li>\r\n      <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n        { props.profile.initials }\r\n      </NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = credentials => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n      credentials.email,\r\n      credentials.password\r\n    ).then(() => {\r\n      dispatch({ type: 'LOGIN_SUCCESS' });\r\n    }).catch(error => {\r\n      dispatch({ type: 'LOGIN_ERROR', error });\r\n    });\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SECCUSS' });\r\n    });\r\n  }\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email,\r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      })\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SECCUSS' });\r\n    }).catch(error => {\r\n      dispatch({ type: 'SIGNUP_ERROR', error });\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/signup\">Sign up</NavLink></li>\r\n      <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = props => {\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? <SignedInLinks profile={ profile } /> : <SignedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">Posts</Link>\r\n        { links }\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            { notifications && notifications.map(item => {\r\n              return (\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{ item.user } </span>\r\n                  <span>{ item.content }</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    { moment(item.time.toDate()).fromNow() }\r\n                  </div>\r\n                </li>\r\n              )\r\n            }) }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title\">{ project.title }</span>\r\n          <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\r\n          <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n        return (\r\n          <Link to={'/project/' + project.id } key={project.id}>\r\n            <ProjectSummary project={project} />\r\n          </Link>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={ projects } />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={ notifications } />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n  ])\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n  const { project, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{ project.title }</span>\r\n            <p>{ project.content }</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\r\n            <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    this.props.history.push('/');\r\n  }\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore.collection('projects').add({\r\n      ...project,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: 'CREATE_PROJECT', project });\r\n    }).catch(error => {\r\n      dispatch({ type: 'CREATE_PROJECT_ERROR', error })\r\n    })\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n  }\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{ authError }</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: creds => dispatch(signIn(creds))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  }\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{ authError }</p> : null }\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport CreateProject from './components/projects/CreateProject';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('login error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case 'SIGNOUT_SECCUSS':\r\n      console.log('signout success');\r\n      return state;\r\n    case 'SIGNUP_SECCUSS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.error.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_PROJECT':\r\n      console.log('CREATE_PROJECT', action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERROR':\r\n      console.log('CREATE_PROJECT_ERROR', action.error);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: \"AIzaSyAk-Lspcw4C7RIKncIqfeFkhQHzmub--nc\",\r\n  authDomain: \"posts-app-id.firebaseapp.com\",\r\n  databaseURL: \"https://posts-app-id.firebaseio.com\",\r\n  projectId: \"posts-app-id\",\r\n  storageBucket: \"posts-app-id.appspot.com\",\r\n  messagingSenderId: \"285578949177\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport config from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(config),\n    reactReduxFirebase(config, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.register();\n});\n"],"sourceRoot":""}